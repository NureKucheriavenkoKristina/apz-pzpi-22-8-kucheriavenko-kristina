#include <iostream>
#include <steam/steam_api.h>

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const char* const kAchievementId_WinOneGame = "ACH_WIN_ONE_GAME";

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Steam API
bool initializeSteam() {
    if (!SteamAPI_Init()) {
        std::cerr << "[–ü–æ–º–∏–ª–∫–∞] Steam API –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ.\n";
        return false;
    }

    if (!SteamUser()->BLoggedOn()) {
        std::cerr << "[–ü–æ–º–∏–ª–∫–∞] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π —É Steam.\n";
        return false;
    }

    return true;
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
bool loadUserStats() {
    if (!SteamUserStats()->RequestCurrentStats()) {
        std::cerr << "[–ü–æ–º–∏–ª–∫–∞] –ù–µ–º–æ–∂–ª–∏–≤–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.\n";
        return false;
    }
    return true;
}

// –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
void unlockAchievement(const char* achievementId) {
    if (SteamUserStats()->SetAchievement(achievementId)) {
        SteamUserStats()->StoreStats();
        std::cout << "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è '" << achievementId << "' —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ! üéâ\n";
    } else {
        std::cout << "–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ '" << achievementId << "'.\n";
    }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
bool isAchievementUnlocked(const char* achievementId) {
    bool achieved = false;
    SteamUserStats()->GetAchievement(achievementId, &achieved);
    return achieved;
}

// –í–∏–≤—ñ–¥ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
void greetUser() {
    const char* name = SteamFriends()->GetPersonaName();
    std::cout << "–ü—Ä–∏–≤—ñ—Ç, " << name << "!\n";
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ Steam API
void shutdownSteam() {
    SteamAPI_Shutdown();
    std::cout << "Steam API –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n";
}

// –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏
int main() {
    if (!initializeSteam()) return 1;
    greetUser();

    if (!loadUserStats()) {
        shutdownSteam();
        return 1;
    }

    if (isAchievementUnlocked(kAchievementId_WinOneGame)) {
        std::cout << "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –≤–∂–µ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ. –ú–æ–ª–æ–¥–µ—Ü—å!\n";
    } else {
        std::cout << "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è —â–µ –Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç–æ. –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ...\n";
        unlockAchievement(kAchievementId_WinOneGame);
    }

    shutdownSteam();
    return 0;
}

