Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії
 






Практична робота №2
з дисципліни: «Архітектура програмного забезпечення»
 





 
Виконала: 								Перевірив:
ст. гр. ПЗПІ-22-8							Ст. в. Сокорчук І. П. 
Кучерявенко К. Р.

                                                					




Харків 2025

2 АРХІТЕКТУРА ВІДОМИХ ПРОГРАМНИХ СИСТЕМ
2.1 Історія змін


	Зміни в документі нотуються до таблиці 2.1.	

Таблиця 2.1 – Історія змін
№	Дата	Версія звіту	Опис змін та виправлень
1	18.03.25	0.1	Створено розділ «Історія змін»
2	23.03.25	0.1	Створено розділ «Мета роботи»
3	23.03.25	0.1	Створено розділ «Опис виконаної роботи»
4	23.03.25	0.1	Створено розділ «Висновки»
5	06.04.25	0.1	Додано додаток А з посиланням на відеоролик
6	23.03.25	0.1	Додано додаток Б зі слайдами презентації
			
				

2.2 Мета роботи	
Метою роботи є розповісти про архітектуру відомої програмної системи Steam, яка є однією з найбільших платформ для цифрового розповсюдження відеоігор та іншого контенту. У цій роботі буде розглянуто основні принципи та технології, на яких побудована система Steam, а також її ключові компоненти, які забезпечують високу доступність, масштабованість і надійність. Окрему увагу буде приділено архітектурі серверної частини, яка підтримує мільйони одночасних користувачів, а також інтеграції з різними системами та сервісами для забезпечення безперебійної роботи платформи.



2.3 Опис виконаної роботи
Steam є однією з найбільших і найпопулярніших платформ цифрового розповсюдження відеоігор у світі. Вона надає користувачам змогу купувати, завантажувати, встановлювати та грати в ігри без необхідності використання фізичних носіїв. Окрім цього, Steam виконує роль соціальної мережі для геймерів, дозволяючи спілкуватися, обмінюватися ігровими предметами, створювати спільноти та ділитися досягненнями. Завдяки своїй гнучкій та потужній архітектурі, Steam забезпечує стабільну роботу сервісу для мільйонів користувачів по всьому світу.
Ключовими аспектами архітектури Steam є її масштабованість, надійність та безпека. Платформа обробляє величезний потік даних, зокрема фінансові транзакції, завантаження ігор, збереження користувацького прогресу та обмін повідомленнями. Завдяки передовим технологіям і грамотному управлінню сервісами, Steam здатна підтримувати стабільну роботу навіть при пікових навантаженнях.
Клієнт Steam – це програмне забезпечення, яке є основним інструментом для взаємодії користувачів із платформою. Його головні функції включають покупку ігор, їх завантаження, запуск, управління бібліотекою, спілкування з друзями, перегляд досягнень та багато іншого. Завдяки постійному оновленню та оптимізації клієнт Steam забезпечує стабільну роботу сервісу та комфортний користувацький досвід.
Інтерфейс Steam є гнучким і функціональним, що дозволяє користувачам легко знаходити потрібну інформацію та швидко виконувати основні дії. Він складається з кількох основних розділів:
–	магазин: містить каталог ігор, програм та інших продуктів, доступних для покупки, тут розміщуються акції, знижки та спеціальні пропозиції;
–	бібліотека: зберігає всі ігри, які належать користувачеві; користувач може запускати, оновлювати, встановлювати або видаляти ігри, а також переглядати статистику та досягнення;
–	спільнота: розділ для взаємодії з іншими користувачами, обговорень ігор, перегляду керівництв, трансляцій та створення груп за інтересами;
–	профіль користувача: містить інформацію про досягнення, список друзів, куплені ігри та іншу персоналізовану інформацію.
Інтерфейс Steam має можливість налаштування: користувачі можуть змінювати вигляд бібліотеки, обирати між різними режимами відображення ігор, налаштовувати сповіщення та інтегрувати Steam із зовнішніми додатками, наприклад, Discord або Twitch.
Steam використовує Chromium Embedded Framework (CEF) для відображення вмісту магазину, бібліотеки та інших веб-компонентів. Це дозволяє Steam швидко оновлювати інтерфейс без необхідності змінювати основний код клієнта.
CEF також забезпечує локальне кешування веб-даних, що дозволяє зменшити навантаження на сервери та пришвидшити завантаження сторінок. Це особливо корисно під час перегляду каталогу ігор або завантаження інформації про знижки, оскільки більшість даних уже зберігаються на пристрої користувача.
Steam забезпечує ефективну та безпечну взаємодію між користувачами, іграми та серверами за допомогою різних мережевих технологій та протоколів.
Для стабільної роботи Steam використовує кілька різних протоколів зв’язку. HTTP/HTTPS – використовується для завантаження веб-сторінок, здійснення покупок, автентифікації користувачів та отримання інформації про ігри. TCP – забезпечує надійний обмін даними між клієнтом та серверами Steam. Використовується для чату, передачі даних про ігрові сесії та інших функцій. UDP – застосовується для швидкої передачі даних у багатокористувацьких іграх, особливо для зниження затримок у матчах з великим навантаженням. Steam самостійно визначає, який протокол буде найоптимальнішим для конкретного типу взаємодії, забезпечуючи баланс між швидкістю та стабільністю.
Безпека є одним із ключових аспектів мережевої взаємодії Steam. Для захисту даних та акаунтів користувачів використовуються такі технології:
–	шифрування SSL/TLS забезпечує безпечне передавання конфіденційної інформації, такої як паролі та платіжні дані;
–	Steam Guard двофакторна аутентифікація, яка додає додатковий рівень захисту акаунту через підтвердження входу на мобільному пристрої;
–	Valve Anti-Cheat (VAC) – система захисту від читерства, яка контролює підозрілу активність у мережевих іграх та блокує користувачів, що використовують шкідливе програмне забезпечення.
Щоб забезпечити швидке завантаження ігор і оновлень, Steam використовує мережу доставки контенту (CDN). Це розподілена система серверів, розташованих у різних країнах, яка дозволяє користувачам завантажувати дані з найближчого до них вузла. Основні переваги використання CDN у Steam:
–	швидке завантаження: файли передаються з найближчого сервера, що мінімізує затримки;
–	менше навантаження на центральні сервери: розподілення трафіку між численними вузлами покращує стабільність;
–	оптимізація завантажень: Steam використовує систему дедуплікації файлів і Delta patching (оновлення тільки змінених частин гри), що зменшує обсяг переданих даних.
Серверна частина Steam виконує безліч важливих функцій, які забезпечують роботу платформи та взаємодію з користувачами. Вона включає сервери аутентифікації, управління контентом, систему статистики та досягнень, а також інші важливі компоненти.
Щоб забезпечити безпечний доступ користувачів до своїх акаунтів, Steam використовує потужну систему аутентифікації. Вона включає:
–	перевірку логіна та пароля користувачі вводять свої облікові дані, які перевіряються на відповідність у базі даних;
–	двофакторну автентифікацію (Steam Guard);
–	система безпечних сесій: користувачі залишаються в системі під час гри, однак сервіс може автоматично завершувати сесії, якщо зафіксовано підозрілу активність.
Також Steam активно бореться з шахрайством, впроваджуючи алгоритми виявлення аномальних спроб входу, підключення з невідомих пристроїв та підозрілої активності в акаунтах.
Steam є платформою, де зберігається та керується величезна кількість ігор та іншого цифрового контенту. Для цього використовується спеціальна система управління контентом, яка включає:
–	система оновлень ігор: автоматичне оновлення файлів гри, що дозволяє розробникам швидко випускати патчі та виправлення;
–	перевірка прав доступу: кожен користувач має ліцензію на певну гру, і сервери Steam перевіряють, чи дійсно ця гра куплена або належить йому;
–	хмарні збереження: гравці можуть зберігати свої дані у хмарі, що дозволяє синхронізувати прогрес між пристроями.
Steam збирає та обробляє величезну кількість даних, включаючи статистику користувачів та інформацію про їхній прогрес у грі. Досягнення – користувачі можуть отримувати нагороди за певні дії у грі, що стимулює їх до подальшого проходження. Ігрова статистика – збирає дані про проведений у грі час, перемоги, програші, унікальні дії тощо. Аналітика для розробників – інформація про поведінку гравців допомагає розробникам краще розуміти свою аудиторію та покращувати свої ігри.
Steam поєднує реляційні та NoSQL бази для забезпечення найкращої продуктивності та масштабованості. MySQL, PostgreSQL – використовуються для обробки транзакцій, зберігання інформації про користувачів, ліцензії, покупки та ігрову статистику. Дозволяють виконувати складні запити та гарантують цілісність даних. Cassandra, MongoDB – використовуються для швидкого зберігання великих обсягів даних, таких як хмарні збереження, кешування користувацької інформації, тимчасові дані про сесії. Дозволяють масштабувати систему горизонтально, додаючи нові сервери в міру збільшення навантаження.
Steam використовує шардування (поділ баз даних на частини) та реплікацію (створення копій баз даних), щоб забезпечити швидку обробку запитів та високу доступність даних. Шардування дозволяє розподілити навантаження між кількома серверами, що допомагає обробляти мільйони користувачів одночасно. Реплікація гарантує, що у випадку виходу одного сервера з ладу система може переключитися на резервний сервер без втрати даних.
Однією з найважливіших функцій Steam є швидке та ефективне завантаження ігор і оновлень. Для цього використовується розподілена мережа доставки контенту (CDN) та спеціальні алгоритми оптимізації завантажень. Користувач обирає гру для завантаження, сервер перевіряє, чи має користувач ліцензію, клієнт Steam завантажує список файлів, які потрібно отримати, гра завантажується з найближчого сервера CDN для максимальної швидкості. Steam перевіряє, чи всі файли були завантажені без помилок.
Маніфести – це спеціальні файли, які містять інформацію про склад і структуру гри. Вони використовуються для оптимізації оновлень (оновлюються тільки змінені файли), перевірки коректності файлів перед запуском, синхронізації даних між пристроями.
Steam застосовує технологію дедуплікації для зменшення обсягу завантажених даних. Якщо у користувача вже є частина файлів, система не завантажує їх повторно.
Delta patching – це механізм оновлення ігор, коли завантажуються лише змінені частини файлів, а не весь архів гри. Це значно зменшує розмір оновлень та економить трафік користувачів.
Steamworks API – це набір інструментів та сервісів, які Valve надає розробникам для інтеграції їхніх ігор у Steam. API спрощує розробку та покращує взаємодію користувачів із платформою. Дозволяє розробникам створювати систему досягнень, що мотивує гравців виконувати певні завдання. Статистика гравця зберігає дані про прогрес, відкриті рівні, кількість перемог тощо. Гравці можуть зберігати прогрес у грі у хмарному сховищі та синхронізувати його між пристроями. Автоматично керує завантаженням і збереженням файлів користувача. Steamworks  забезпечує глобальні сервери для багатокористувацьких ігор. Підтримує Peer-to-Peer (P2P) з'єднання, що зменшує навантаження на сервери та покращує продуктивність. Дозволяє додавати торгівельні картки, внутрішньо-ігровий ринок та предмети. Гравці можуть купувати косметичні предмети, зброю, бонуси через Steam Marketplace. Steamworks API підтримує інтеграцію з Valve Anti-Cheat (VAC). Розробники можуть відстежувати підозрілу активність.
Steam активно бореться з людьми, які намагаються отримати перевагу нечесними методами використовуючи сторонні програми для отримання переваг у грі. Valve Anti-Cheat (VAC) – це автоматична система виявлення шахрайського програмного забезпечення, що працює у багатьох іграх.
Опис того, як працює VAC: сканування ігрового середовища, постійна перевірка пам’яті гри та файли на наявність сторонніх змін, використання сигнатурне та поведінкове аналізування і автоматичні блокування.
Якщо VAC виявляє сторонні програми, користувач отримує VAC-Ban, що забороняє йому грати в мережеві режими VAC-захищених ігор. VAC-блокування незворотне – його неможливо скасувати навіть через підтримку Steam.
Steam може збирати поведінкові дані: незвично високий рівень точності стрільби, неможливі швидкості руху, модифікації ресурсів гри. Якщо алгоритми виявляють аномалії, гра може позначити користувача для подальшої перевірки. Також користувачі можуть поскаржитися на гравця за підозрілу поведінку. У деяких іграх є система Overwatch, де досвідчені гравці можуть переглядати запис гри підозрілих гравців. Для забезпечення стабільної роботи такої великої платформи використовуються спеціальні архітектурні рішення.
Steam побудований на мікросервісах, що дозволяє йому розподіляти навантаження між тисячами серверів. Кожна окрема функція (магазин, бібліотека, оновлення) працює незалежно, що запобігає збоям у всій системі при виході з ладу окремого сервісу.
Steam використовує систему резервного копіювання та реплікації, щоб уникнути втрати даних. Бази даних синхронізуються у кількох регіональних центрах, що гарантує стабільність навіть при виході одного з дата-центрів з ладу.
Steam має системи моніторингу, що аналізують трафік та навантаження на сервери в режимі реального часу. У пікові моменти (наприклад, під час великих розпродажів) система автоматично додає нові сервери.

2.4 Висновки
	Steam є однією з наймасштабніших платформ цифрової дистрибуції ігор, що поєднує магазин, соціальну мережу, сервіси та систему оновлень. Завдяки потужній архітектурі, використанню мікросервісів та глобальної мережі серверів, платформа забезпечує стабільну роботу навіть при пікових навантаженнях. Steamworks API спрощує інтеграцію ігор із сервісами Steam, а система доставки контенту оптимізує завантаження, використовуючи CDN, дедуплікацію та Delta Patching.
Окрему роль відіграє безпека та боротьба з шахрайством. Valve Anti-Cheat (VAC) автоматично виявляє стороннє програмне забезпечення та блокує порушників, що підтримує чесну гру в мультиплеєрі. Steam постійно розвивається, впроваджуючи нові технології та покращуючи сервіси, що робить його однією з найнадійніших та найзручніших платформ для розробників та геймерів по всьому світу. 
Додаток А
Хронологічний опис та посилання

Відеозапис доповіді на YouTube: https://youtu.be/4N2vX1j3jOs

Хронологічний опис доповіді:
00:00 Вступна частина: представлення теми презентації  
Короткий вступ, у якому пояснюється, про що буде презентація.
00:17 Огляд архітектури Steam  
Загальна характеристика Steam як однієї з найбільших і найпопулярніших платформ цифрового розповсюдження відеоігор у світі. Пояснення основних функцій платформи: купівля, завантаження, встановлення ігор без фізичних носіїв, а також соціальна складова для геймерів. Виділено ключові аспекти архітектури: масштабованість, надійність та безпека. Зазначено, що платформа обробляє величезні потоки даних і здатна підтримувати стабільну роботу навіть при пікових навантаженнях.
01:00 Клієнтська частина Steam  
Опис клієнта Steam як основного інструменту для взаємодії користувачів із платформою. Представлено функції клієнта: покупка ігор, завантаження, запуск, управління бібліотекою, спілкування з друзями, перегляд досягнень. Детально розглянуто інтерфейс Steam, його гнучкість та функціональність. Пояснюється використання Chromium Embedded Framework для відображення вмісту магазину, бібліотеки та інших веб-компонентів, що дозволяє швидко оновлювати інтерфейс та забезпечує локальне кешування даних.
02:05 Мережева взаємодія  
Розгляд технологій та протоколів, які забезпечують взаємодію між користувачами, іграми та сервісами Steam. Описано основні протоколи: HTTP/HTTPS для завантаження веб-сторінок, покупок, автентифікації; TCP для надійного обміну даними; UDP для швидкої передачі даних у багатокористувацьких іграх. Детально розглянуто аспекти безпеки мережевої взаємодії: шифрування SSL/TLS, двофакторна автентифікація Steam Guard, система захисту Valve Anti-Cheat (VAC). Пояснено використання Content Delivery Network (CDN) для швидкого завантаження ігор та оновлень.
03:50 Backend Steam  
Опис серверної частини Steam, включаючи сервери автентифікації, управління контентом, систему статистики та досягнень. Докладно розглянуто систему автентифікації, що забезпечує безпечний доступ користувачів до своїх акаунтів. Пояснено систему управління контентом: оновлення ігор, перевірка прав доступу, хмарні збереження. Описано збір та обробку статистики користувачів, систему досягнень, яка мотивує гравців.
05:22 Бази даних  
Аналіз використання як реляційних (MySQL, PostgreSQL), так і нереляційних (Cassandra, MongoDB) баз даних у Steam для забезпечення продуктивності та масштабованості. Пояснено, що реляційні БД використовуються для обробки транзакцій, зберігання інформації про користувачів, ліцензії, покупки, а нереляційні - для швидкого зберігання великих обсягів даних. Описано використання технік шардування (поділ баз даних на частини) та реплікації (створення копій) для забезпечення швидкої обробки запитів та високої доступності.
06:24 Система завантаження контенту  
Детальний опис процесу завантаження ігор та оновлень у Steam. Представлено послідовність етапів: вибір гри, перевірка ліцензії, завантаження списку файлів, отримання даних з найближчого CDN-сервера, перевірка цілісності. Пояснено використання файлів-маніфестів для оптимізації оновлень та технологій дедуплікації для зменшення обсягу завантажень. Описано механізм Delta Patch, що дозволяє завантажувати лише змінені частини файлів замість цілих архівів.
07:27 Steamworks API  
Презентація набору інструментів та сервісів для розробників, що спрощують інтеграцію ігор із платформою Steam. Описано основні компоненти API: система досягнень, збереження статистики, хмарне сховище для прогресу гравців, мережеві сервіси для багатокористувацьких ігор, торгівельні функції для внутрішньоігрових предметів, інтеграція з VAC для захисту від шахрайства.
08:27 Анти-чіт система (VAC)  
Докладний розгляд системи Valve Anti-Cheat, яка бореться з гравцями, що намагаються отримати перевагу нечесними методами. Пояснено принципи роботи VAC: сканування ігрового середовища, перевірка пам'яті гри та файлів, використання сигнатурного та поведінкового аналізу. Описано процес блокування порушників, незворотність цих блокувань. Розглянуто додаткові методи виявлення шахрайства, включаючи аналіз поведінкових даних та систему скарг від користувачів.
09:44 Масштабованість і надійність системи  
Опис архітектурних рішень, що забезпечують надійну роботу такої великої платформи. Пояснено використання мікросервісної архітектури, яка дозволяє розподіляти навантаження між тисячами серверів і запобігає збою всієї системи при виході з ладу окремого сервісу. Розглянуто системи моніторингу, що аналізують трафік та навантаження в режимі реального часу та автоматично надають додаткові сервери в пікові моменти.
10:10 Висновки  
Підсумок основних переваг архітектури Steam як масштабної платформи цифрової дистрибуції. Наголошено на потужності архітектури, використанні мікросервісів та глобальної мережі серверів, що забезпечує стабільну роботу навіть при пікових навантаженнях. Відзначено роль Steamworks у спрощенні інтеграції ігор із сервісами Steam, оптимізовану систему доставки контенту та важливість безпеки та боротьби з шахрайством за допомогою VAC. Зазначено, що Steam постійно розвивається, впроваджуючи нові технології та вдосконалюючи сервіси. 

Додаток Б
Слайди презентації доповіді


 
Рисунок Б.1 – Титульний слайд

 
Рисунок Б.2 – Що таке Steam
 
Рисунок Б.3 – Клієнтська частина

 
Рисунок Б.4 – Мережева взаємодія
 
Рисунок Б.5 – Backend Steam

 
Рисунок Б.6 – Бази даних Steam
 
Рисунок Б.7 – Система завантаження контенту

 
Рисунок Б.8 – SteamworksAPI
 
Рисунок Б.9 – Анти-чіт система (VAC)

 
Рисунок Б.10 – Масштабованість і надійність системи
 
Рисунок Б.11 – Висновки

 
Рисунок Б.12 – Використані джерела

